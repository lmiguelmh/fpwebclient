"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}var vars=require("./vars");var messages=require("./messages");var URIUtils=require("./URIUtils");var Logger=require("./Logger");var SimpleNativeApplication=function(){function SimpleNativeApplication(onConnect,onMessage,onClose,onError){_classCallCheck(this,SimpleNativeApplication);if(onConnect===undefined){throw Error("IllegalOnConnectArgumentException")}if(onMessage===undefined){throw Error("IllegalOnResponseArgumentException")}if(onError===undefined){throw Error("IllegalOnErrorArgumentException")}if(onClose===undefined){throw Error("IllegalOnCloseArgumentException")}this.onConnect=onConnect;this.onMessage=onMessage;this.onError=onError;this.onClose=onClose}_createClass(SimpleNativeApplication,[{key:"processInput",value:function processInput(input){return input}},{key:"connect",value:function connect(localAppUrl){try{var self=this;Logger.log("connecting to: ".concat(localAppUrl));var connection=new WebSocket(localAppUrl);connection.onopen=function(e){Logger.log({"onopen":e});setTimeout(function(){self.connection=connection;self.onConnect&&self.onConnect()},1)};connection.onmessage=function(e){Logger.log({"onmessage":e});self.onMessage&&self.onMessage(e.data)};connection.onerror=function(e){Logger.log({"onerror":e});self.onError&&self.onError(e)};connection.onclose=function(e){Logger.log({"onclose":e});self.onClose&&self.onClose(e)}}catch(e){Logger.log({"catch":e});this.onError&&this.onError(e)}}},{key:"send",value:function send(message){if(this.connection===undefined){throw Error("IllegalConnectionException")}else{this.connection.send(message)}}}]);return SimpleNativeApplication}();module.exports=SimpleNativeApplication;